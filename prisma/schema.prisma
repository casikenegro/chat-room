// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @db.Uuid
  email     String      @unique
  password  String
  name      String?
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  deletedAt DateTime?   @map("deleted_at")
  roomId    String?     @db.Uuid
  rooms     UserRooms[]

  @@map("users")
}

model Room {
  id          String      @id @db.Uuid
  title       String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?
  users       UserRooms[]

  @@map("rooms")
}

model UserRooms {
  id        String    @id @db.Uuid
  isOwner   Boolean   @default(false) @map("is_owner")
  userId    String    @map("user_id") @db.Uuid
  roomId    String    @map("room_id") @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Room      Room      @relation(fields: [roomId], references: [id], onDelete: Cascade)
  messages  Message[]

  @@map("user_rooms") 
}

model Message {
  id         String    @id @db.Uuid
  content    String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")
  userRoomId String    @db.Uuid
  UserRoom   UserRooms @relation(fields: [userRoomId], references: [id])

  @@map("messages")
}
